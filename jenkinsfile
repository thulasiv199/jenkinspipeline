pipeline {
    agent {
    label 'agent1'
    }
   
    options {
  timeout(activity: true, time: 10)
   buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '3', numToKeepStr: '3')
   }

     stages {
          stage('checkout'){
            steps{
               git branch: 'Newbranch2', url: 'https://github.com/thulasiv199/jenkinspipeline.git'
            }
        }
            stage('build'){
                steps{
                    sh "echo $PATH"
                    sh "mvn clean install" 
                }
            }
            stage('test'){
               steps{
                  sh "mvn test"
                  junit allowEmptyResults: true, testResults: 'target/surefire-reports/*.xml'
                  }
             }
            stage('deploy to two'){
               parallel{
                 stage('server1'){
                   environment{
                      target_user = "ec2-user"
                       target_server = "18.119.116.202"
     }
                     steps{
                       echo "deloying to dev1 environment"
                          sshagent(['globalkey']){
                            sh "scp -o StrictHostKeyChecking=no target/my-app-1.0-SNAPSHOT.jar $target_user@$target_server:/tmp"     
                 }
            }
      }
                   stage('server2'){
                    environment{
                      target_user = "ec2-user"
                       target_server = "3.142.174.87"
     }
                     steps{
                       echo "deloying to dev2 environment"
                          sshagent(['globalkey']){
                            sh "scp -o StrictHostKeyChecking=no target/my-app-1.0-SNAPSHOT.jar $target_user@$target_server:/tmp"
 }
}
}
}
}
     }
            post {
                always {
                   deleteDir()
                      }
                failure {
                    echo "send an email"
                      }
                success {
                    echo " run successfully"
                       }
}
}
